{"ast":null,"code":"var _jsxFileName = \"/home/arbaaz/Desktop/front-end/React/my-app/src/Hooks/useCallback/useCallbackA.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport UseCallbackB from './useCallbackB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UseCallbakcA() {\n  _s();\n  const [add, setAdd] = useState(0);\n  // const [count,setCount] = useState(0);\n  const Learning = useCallback(() => {\n    // some Opration\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Learning useCallback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UseCallbackB, {\n      Learning: Learning,\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: add\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAdd(add + 1),\n      children: \"Addition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(UseCallbakcA, \"hslHu10/8tSgf3sJ246mPw8M00M=\");\n_c = UseCallbakcA;\nexport default UseCallbakcA;\nvar _c;\n$RefreshReg$(_c, \"UseCallbakcA\");","map":{"version":3,"names":["React","useState","useCallback","UseCallbackB","jsxDEV","_jsxDEV","UseCallbakcA","_s","add","setAdd","Learning","children","fileName","_jsxFileName","lineNumber","columnNumber","count","onClick","_c","$RefreshReg$"],"sources":["/home/arbaaz/Desktop/front-end/React/my-app/src/Hooks/useCallback/useCallbackA.jsx"],"sourcesContent":["import React, {useState,useCallback} from 'react'\nimport UseCallbackB from './useCallbackB';\n\nfunction UseCallbakcA() {\nconst [add,setAdd] = useState(0);\n// const [count,setCount] = useState(0);\nconst Learning =  useCallback(() => {\n    // some Opration\n},[]);\n  return (\n    <div>\n      <h1>Learning useCallback</h1>\n    <UseCallbackB Learning = {Learning} count = {count}/>\n    <h1>{add}</h1>\n    <button onClick = {() => setAdd(add + 1)}>Addition</button>\n    {/* <h1>{count}</h1> */}\n    {/* <button onClick = {() => setCount(count + 2)}>Increment Count</button> */}\n    </div>\n  )\n}\n\nexport default UseCallbakcA;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,WAAW,QAAO,OAAO;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAChC;EACA,MAAMS,QAAQ,GAAIR,WAAW,CAAC,MAAM;IAChC;EAAA,CACH,EAAC,EAAE,CAAC;EACH,oBACEG,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BV,OAAA,CAACF,YAAY;MAACO,QAAQ,EAAIA,QAAS;MAACM,KAAK,EAAIA;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrDV,OAAA;MAAAM,QAAA,EAAKH;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACdV,OAAA;MAAQY,OAAO,EAAIA,CAAA,KAAMR,MAAM,CAACD,GAAG,GAAG,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGtD,CAAC;AAEV;AAACR,EAAA,CAhBQD,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAkBrB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}