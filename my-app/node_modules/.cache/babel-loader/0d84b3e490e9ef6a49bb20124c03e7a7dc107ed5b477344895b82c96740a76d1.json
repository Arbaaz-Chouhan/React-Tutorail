{"ast":null,"code":"var _jsxFileName = \"/home/arbaaz/Desktop/front-end/React/my-app/src/Hooks/useState/useState-with-obj.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initState = {\n  fname: \"Adnan\",\n  lname: \"chouhan\"\n};\nfunction ObjectUseState() {\n  _s();\n  const [person, setPerson] = useState(initState);\n\n  // This is wrong way (Mutating State)\n  // const changeName = () => {\n  //     person.fname = \"Arbaaz\";\n  //     person.lname =  \"Khan\";\n  //     setPerson(person);\n  // }\n\n  // This is right way (immutable update)\n  const changeName = () => {\n    const newPerson = {\n      ...person\n    };\n    newPerson.fname = \"Arbaaz\";\n    newPerson.lname = \"Khan\";\n    setPerson(newPerson);\n  };\n  console.log(\"ObjectUseState Render\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeName,\n      children: [person.fname, \" \", person.lname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ObjectUseState, \"jWJxOGwkEc6Qooq7WL4wsqdExWs=\");\n_c = ObjectUseState;\nexport default ObjectUseState;\nvar _c;\n$RefreshReg$(_c, \"ObjectUseState\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initState","fname","lname","ObjectUseState","_s","person","setPerson","changeName","newPerson","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arbaaz/Desktop/front-end/React/my-app/src/Hooks/useState/useState-with-obj.jsx"],"sourcesContent":["import React, {useState} from 'react'\n\nconst initState = {\n    fname : \"Adnan\",\n    lname : \"chouhan\",\n}\n\nfunction ObjectUseState() {\nconst [person,setPerson] = useState(initState);\n\n\n// This is wrong way (Mutating State)\n// const changeName = () => {\n//     person.fname = \"Arbaaz\";\n//     person.lname =  \"Khan\";\n//     setPerson(person);\n// }\n\n// This is right way (immutable update)\nconst changeName = () => {\nconst newPerson = {...person}\n        newPerson.fname = \"Arbaaz\";\n        newPerson.lname =  \"Khan\";\n        setPerson(newPerson);\n    }\n\nconsole.log(\"ObjectUseState Render\")\n\n  return (\n    <div>\n      <button onClick = {changeName}>{person.fname} {person.lname}</button>\n    </div>\n  )\n}\n\nexport default ObjectUseState;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAG;EACdC,KAAK,EAAG,OAAO;EACfC,KAAK,EAAG;AACZ,CAAC;AAED,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGT,QAAQ,CAACG,SAAS,CAAC;;EAG9C;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG;MAAC,GAAGH;IAAM,CAAC;IACrBG,SAAS,CAACP,KAAK,GAAG,QAAQ;IAC1BO,SAAS,CAACN,KAAK,GAAI,MAAM;IACzBI,SAAS,CAACE,SAAS,CAAC;EACxB,CAAC;EAELC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EAElC,oBACEX,OAAA;IAAAY,QAAA,eACEZ,OAAA;MAAQa,OAAO,EAAIL,UAAW;MAAAI,QAAA,GAAEN,MAAM,CAACJ,KAAK,EAAC,GAAC,EAACI,MAAM,CAACH,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV;AAACZ,EAAA,CA1BQD,cAAc;AAAAc,EAAA,GAAdd,cAAc;AA4BvB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}