{"ast":null,"code":"var _jsxFileName = \"/home/arbaaz/Desktop/front-end/React/my-app/src/Hooks/Fetching-data-with-useReducer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Initial State\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  loading: false,\n  data: null,\n  error: null\n};\n\n// Reducer Function\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_START\":\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        loading: false,\n        data: action.payload,\n        error: null\n      };\n    case \"FETCH_ERROR\":\n      return {\n        loading: false,\n        data: null,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nfunction FetchDataComponent() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_START\"\n      }); // Start fetching\n      try {\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: response.data\n        }); // Success case\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_ERROR\",\n          payload: error.message\n        }); // Error case\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetching Data with useReducer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), state.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }, this), state.error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", state.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this), state.data && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.data.slice(0, 5).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchDataComponent, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = FetchDataComponent;\nexport default FetchDataComponent;\nvar _c;\n$RefreshReg$(_c, \"FetchDataComponent\");","map":{"version":3,"names":["React","useReducer","useEffect","axios","jsxDEV","_jsxDEV","initialState","loading","data","error","reducer","state","action","type","payload","FetchDataComponent","_s","dispatch","fetchData","response","get","message","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","item","title","id","_c","$RefreshReg$"],"sources":["/home/arbaaz/Desktop/front-end/React/my-app/src/Hooks/Fetching-data-with-useReducer.jsx"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Initial State\nconst initialState = {\n    loading: false,\n    data: null,\n    error: null\n};\n\n// Reducer Function\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"FETCH_START\":\n            return { loading: true, data: null, error: null };\n        case \"FETCH_SUCCESS\":\n            return { loading: false, data: action.payload, error: null };\n        case \"FETCH_ERROR\":\n            return { loading: false, data: null, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nfunction FetchDataComponent() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: \"FETCH_START\" });  // Start fetching\n            try {\n                const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n                dispatch({ type: \"FETCH_SUCCESS\", payload: response.data });  // Success case\n            } catch (error) {\n                dispatch({ type: \"FETCH_ERROR\", payload: error.message });  // Error case\n            }\n        };\n        \n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <h2>Fetching Data with useReducer</h2>\n            {state.loading && <p>Loading...</p>}\n            {state.error && <p>Error: {state.error}</p>}\n            {state.data && (\n                <ul>\n                    {state.data.slice(0, 5).map((item) => (\n                        <li key={item.id}>{item.title}</li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default FetchDataComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}