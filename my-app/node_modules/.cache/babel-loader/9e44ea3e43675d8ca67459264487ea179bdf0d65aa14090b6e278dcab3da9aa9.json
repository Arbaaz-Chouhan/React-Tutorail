{"ast":null,"code":"var _jsxFileName = \"/home/arbaaz/Desktop/front-end/React/my-app/src/Hooks/useCallback/useCallbackA.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport UseCallbackB from './useCallbackB'; // ✅ Corrected import (Uppercase first letter)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UseCallbackA() {\n  _s();\n  const [count, setCount] = useState(0);\n  const handleClick = useCallback(() => {\n    console.log(\"Button clicked!\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UseCallbackB, {\n      Learning: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(UseCallbackA, \"1cB4ljO+WlCyM3OAm4ykdyUJXqU=\");\n_c = UseCallbackA;\nexport default UseCallbackA;\nvar _c;\n$RefreshReg$(_c, \"UseCallbackA\");","map":{"version":3,"names":["React","useState","useCallback","UseCallbackB","jsxDEV","_jsxDEV","UseCallbackA","_s","count","setCount","handleClick","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Learning","onClick","_c","$RefreshReg$"],"sources":["/home/arbaaz/Desktop/front-end/React/my-app/src/Hooks/useCallback/useCallbackA.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport UseCallbackB from './useCallbackB'; // ✅ Corrected import (Uppercase first letter)\n\nfunction UseCallbackA() {\n  const [count, setCount] = useState(0);\n\n  const handleClick = useCallback(() => {\n    console.log(\"Button clicked!\");\n  }, []);\n\n  return (\n    <div>\n      <h2>Count: {count}</h2>\n      <UseCallbackB Learning={handleClick} />  {/* ✅ Corrected component name */}\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </div>\n  );\n}\n\nexport default UseCallbackA;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMS,WAAW,GAAGR,WAAW,CAAC,MAAM;IACpCS,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,GAAI,SAAO,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBZ,OAAA,CAACF,YAAY;MAACe,QAAQ,EAAER;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE,eACzCZ,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAACV,EAAA,CAdQD,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAgBrB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}